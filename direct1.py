import numpy as np
from matplotlib import pyplot as plt
import math

if False:
    a = 1.0
    b = 5.1/(4.0*math.pi*math.pi)
    c = 5.0/math.pi
    r = 6.0
    s = 10.0
    t = 1/(8.0*math.pi)
    d = s*(1.0-t)

    xlist = np.linspace(-5.0, 20.0, 100)
    ylist = np.linspace(-5.0, 20.0, 100)
    X, Y = np.meshgrid(xlist, ylist)
    Zt = Y - b*X*X + c*X - r;
    Z = a*(Zt*Zt) + d*np.cos(X) + s
    fig,ax=plt.subplots(1,1)
    lev = np.linspace(0.0,20.0, 1);
    cp = ax.contourf(X, Y, np.log10(Z), 50)
    fig.colorbar(cp) # Add a colorbar to a plot
    
if True:
    xlist = np.linspace(-5.0, 5.0, 100)
    ylist = np.linspace(-5.0, 5.0, 100)
    X, Y = np.meshgrid(xlist, ylist)
    
    Z = 2*X*X + 2*Y*Y + 2*X*Y + 3*X + 3*Y + 1 - np.log(X*X + Y*Y - 4);
    R = X*X + Y*Y - 4.0;
    Z[R <= 0] = 1000.0;
    fig,ax=plt.subplots(1,1)
    lev = np.linspace(0.0,20.0, 1);
    cp = ax.contourf(X, Y, Z, 50)
    fig.colorbar(cp) # Add a colorbar to a plot
    

data = np.array([
[0.500000, 0.500000],
[0.500000, 0.166667],
[0.500000, 0.833333],
[0.166667, 0.500000],
[0.833333, 0.500000],
[0.166667, 0.166667],
[0.833333, 0.166667],
[0.166667, 0.833333],
[0.833333, 0.833333],
[0.500000, 0.055556],
[0.500000, 0.277778],
[0.388889, 0.166667],
[0.611111, 0.166667],
[0.388889, 0.277778],
[0.611111, 0.277778],
[0.166667, 0.388889],
[0.166667, 0.611111],
[0.055556, 0.500000],
[0.277778, 0.500000],
[0.500000, 0.240741],
[0.500000, 0.314815],
[0.462963, 0.277778],
[0.537037, 0.277778],
[0.055556, 0.611111],
[0.277778, 0.611111],
[0.277778, 0.462963],
[0.277778, 0.537037],
[0.240741, 0.500000],
[0.314815, 0.500000],
[0.537037, 0.265432],
[0.537037, 0.290123],
[0.524691, 0.277778],
[0.549383, 0.277778],
[0.055556, 0.388889],
[0.277778, 0.388889],
[0.240741, 0.537037],
[0.314815, 0.537037],
[0.549383, 0.273663],
[0.549383, 0.281893],
[0.545267, 0.277778],
[0.553498, 0.277778],
[0.833333, 0.055556],
[0.833333, 0.277778],
[0.722222, 0.166667],
[0.944444, 0.166667],
[0.277778, 0.574074],
[0.277778, 0.648148],
[0.240741, 0.611111],
[0.314815, 0.611111],
[0.277778, 0.524691],
[0.277778, 0.549383],
[0.265432, 0.537037],
[0.290123, 0.537037],
[0.545267, 0.281893],
[0.553498, 0.281893],
[0.722222, 0.277778],
[0.944444, 0.277778],
[0.240741, 0.574074],
[0.314815, 0.574074],
[0.553498, 0.280521],
[0.553498, 0.283265],
[0.552126, 0.281893],
[0.554870, 0.281893],
[0.166667, 0.722222],
[0.166667, 0.944444],
[0.055556, 0.833333],
[0.277778, 0.833333],
[0.611111, 0.240741],
[0.611111, 0.314815],
[0.574074, 0.277778],
[0.648148, 0.277778],
[0.265432, 0.549383],
[0.290123, 0.549383],
[0.552126, 0.283265],
[0.554870, 0.283265],
[0.055556, 0.722222],
[0.277778, 0.722222],
[0.574074, 0.314815],
[0.648148, 0.314815],
[0.277778, 0.561728],
[0.277778, 0.586420],
[0.265432, 0.574074],
[0.290123, 0.574074],
[0.554870, 0.282807],
[0.554870, 0.283722],
[0.554412, 0.283265],
[0.555327, 0.283265],
[0.388889, 0.055556],
[0.611111, 0.055556],
[0.240741, 0.462963],
[0.314815, 0.462963],
[0.265432, 0.561728],
[0.290123, 0.561728],
[0.290123, 0.569959],
[0.290123, 0.578189],
[0.286008, 0.574074],
[0.294239, 0.574074],
[0.554412, 0.283722],
[0.555327, 0.283722],
[0.555327, 0.283112],
[0.555327, 0.283417],
[0.555175, 0.283265],
[0.555479, 0.283265],
[0.722222, 0.055556],
[0.944444, 0.055556],
[0.240741, 0.648148],
[0.314815, 0.648148],
[0.574074, 0.265432],
[0.574074, 0.290123],
[0.561728, 0.277778],
[0.586420, 0.277778],
[0.286008, 0.569959],
[0.294239, 0.569959],
[0.555327, 0.283570],
[0.555327, 0.283874],
[0.555175, 0.283722],
[0.555479, 0.283722],
[0.500000, 0.722222],
[0.500000, 0.944444],
[0.388889, 0.833333],
[0.611111, 0.833333],
[0.574074, 0.240741],
[0.648148, 0.240741],
[0.561728, 0.290123],
[0.586420, 0.290123],
[0.286008, 0.568587],
[0.286008, 0.571331],
[0.284636, 0.569959],
[0.287380, 0.569959],
[0.388889, 0.722222],
[0.611111, 0.722222],
[0.462963, 0.240741],
[0.537037, 0.240741],
[0.265432, 0.586420],
[0.290123, 0.586420],
[0.574074, 0.286008],
[0.574074, 0.294239],
[0.569959, 0.290123],
[0.578189, 0.290123],
[0.284636, 0.568587],
[0.287380, 0.568587],
[0.833333, 0.388889],
[0.833333, 0.611111],
[0.722222, 0.500000],
[0.944444, 0.500000],
[0.277778, 0.351852],
[0.277778, 0.425926],
[0.240741, 0.388889],
[0.314815, 0.388889],
[0.524691, 0.290123],
[0.549383, 0.290123],
[0.569959, 0.286008],
[0.578189, 0.286008],
[0.286008, 0.568130],
[0.286008, 0.569044],
[0.285551, 0.568587],
[0.286465, 0.568587],
[0.722222, 0.388889],
[0.944444, 0.388889],
[0.240741, 0.425926],
[0.314815, 0.425926],
[0.265432, 0.524691],
[0.290123, 0.524691],
[0.290123, 0.557613],
[0.290123, 0.565844],
[0.286008, 0.561728],
[0.294239, 0.561728],
[0.569959, 0.284636],
[0.569959, 0.287380],
[0.568587, 0.286008],
[0.571331, 0.286008],
[0.285551, 0.568130],
[0.286465, 0.568130],
[0.055556, 0.944444],
[0.277778, 0.944444],
[0.388889, 0.240741],
[0.388889, 0.314815],
[0.351852, 0.277778],
[0.425926, 0.277778],
[0.561728, 0.265432],
[0.586420, 0.265432],
[0.286008, 0.565844],
[0.294239, 0.565844],
[0.286008, 0.560357],
[0.286008, 0.563100],
[0.284636, 0.561728],
[0.287380, 0.561728],
[0.722222, 0.611111],
[0.944444, 0.611111],
[0.351852, 0.314815],
[0.425926, 0.314815],
[0.524691, 0.265432],
[0.549383, 0.265432],
[0.561728, 0.286008],
[0.561728, 0.294239],
[0.557613, 0.290123],
[0.565844, 0.290123],
[0.284636, 0.563100],
[0.287380, 0.563100],
[0.166667, 0.055556],
[0.166667, 0.277778],
[0.055556, 0.166667],
[0.277778, 0.166667],
[0.722222, 0.240741],
[0.722222, 0.314815],
[0.685185, 0.277778],
[0.759259, 0.277778],
[0.500000, 0.265432],
[0.500000, 0.290123],
[0.487654, 0.277778],
[0.512346, 0.277778],
[0.557613, 0.286008],
[0.565844, 0.286008],
[0.286008, 0.564472],
[0.286008, 0.567215],
[0.284636, 0.565844],
[0.287380, 0.565844],
[0.286008, 0.562643],
[0.286008, 0.563557],
[0.285551, 0.563100],
[0.286465, 0.563100]
    ])
x, y = data.T
plt.scatter(-5+x*10,-5+y*10,s=1,c='#ff0000')

#rx = 3*math.pi;
#ry = b*rx*rx - c*rx + r
#plt.scatter(rx,ry,s=5,c='#00ff00')
#rx = 5*math.pi;
#ry = b*rx*rx - c*rx + r
rx = -0.5
ry = -0.5
plt.scatter(rx,ry,s=5,c='#00ff00')

plt.show()
