import numpy as np
from matplotlib import pyplot as plt
import math

if False:
    a = 1.0
    b = 5.1/(4.0*math.pi*math.pi)
    c = 5.0/math.pi
    r = 6.0
    s = 10.0
    t = 1/(8.0*math.pi)
    d = s*(1.0-t)

    xlist = np.linspace(-5.0, 20.0, 100)
    ylist = np.linspace(-5.0, 20.0, 100)
    X, Y = np.meshgrid(xlist, ylist)
    Zt = Y - b*X*X + c*X - r;
    Z = a*(Zt*Zt) + d*np.cos(X) + s
    fig,ax=plt.subplots(1,1)
    lev = np.linspace(0.0,20.0, 1);
    cp = ax.contourf(X, Y, np.log10(Z), 50)
    fig.colorbar(cp) # Add a colorbar to a plot
    
if True:
    xlist = np.linspace(0, 1.0, 100)
    ylist = np.linspace(0, 1.0, 100)
    X, Y = np.meshgrid(xlist, ylist)
    
    Z =  - X*(X-1) - Y*(Y-1);
    #Z = 2*X*X + 2*Y*Y + 2*X*Y + 3*X + 3*Y + 1 - np.log(X*X + Y*Y - 4);
    #R = X*X + Y*Y - 4.0;
    #Z[R <= 0] = 1000.0;
    fig,ax=plt.subplots(1,1)
    lev = np.linspace(0.0,20.0, 1);
    cp = ax.contourf(X, Y, Z, 50)
    fig.colorbar(cp) # Add a colorbar to a plot

if False:
    xlist = np.linspace(0, 1, 100)
    ylist = np.linspace(0, 1, 100)
    X, Y = np.meshgrid(xlist, ylist)
    Z = X+Y - X*(X-1) - Y*(Y-1)
    fig,ax=plt.subplots(1,1)
    lev = np.linspace(0.0,20.0, 1)
    cp = ax.contourf(X, Y, Z, 50)
    fig.colorbar(cp) # Add a colorbar to a plot
    

data = np.array([
[0.500000, 0.500000],
[0.166667, 0.500000],
[0.833333, 0.500000],
[0.500000, 0.166667],
[0.500000, 0.833333],
[0.166667, 0.166667],
[0.166667, 0.833333],
[0.833333, 0.166667],
[0.833333, 0.833333],
[0.388889, 0.500000],
[0.611111, 0.500000],
[0.500000, 0.388889],
[0.500000, 0.611111],
[0.055556, 0.500000],
[0.277778, 0.500000],
[0.166667, 0.388889],
[0.166667, 0.611111],
[0.722222, 0.500000],
[0.944444, 0.500000],
[0.833333, 0.388889],
[0.833333, 0.611111],
[0.388889, 0.166667],
[0.611111, 0.166667],
[0.500000, 0.055556],
[0.500000, 0.277778],
[0.388889, 0.833333],
[0.611111, 0.833333],
[0.500000, 0.722222],
[0.500000, 0.944444],
[0.055556, 0.166667],
[0.277778, 0.166667],
[0.166667, 0.055556],
[0.166667, 0.277778],
[0.055556, 0.833333],
[0.277778, 0.833333],
[0.166667, 0.722222],
[0.166667, 0.944444],
[0.722222, 0.166667],
[0.944444, 0.166667],
[0.833333, 0.055556],
[0.833333, 0.277778],
[0.722222, 0.833333],
[0.944444, 0.833333],
[0.833333, 0.722222],
[0.833333, 0.944444],
[0.388889, 0.388889],
[0.388889, 0.611111],
[0.611111, 0.388889],
[0.611111, 0.611111],
[0.055556, 0.388889],
[0.055556, 0.611111],
[0.277778, 0.388889],
[0.277778, 0.611111],
[0.722222, 0.388889],
[0.722222, 0.611111],
[0.944444, 0.388889],
[0.944444, 0.611111],
[0.388889, 0.055556],
[0.388889, 0.277778],
[0.611111, 0.055556],
[0.611111, 0.277778],
[0.388889, 0.722222],
[0.388889, 0.944444],
[0.611111, 0.722222],
[0.611111, 0.944444],
[0.055556, 0.055556],
[0.055556, 0.277778],
[0.277778, 0.055556],
[0.277778, 0.277778],
[0.055556, 0.722222],
[0.055556, 0.944444],
[0.277778, 0.722222],
[0.277778, 0.944444],
[0.722222, 0.055556],
[0.722222, 0.277778],
[0.944444, 0.055556],
[0.944444, 0.277778],
[0.722222, 0.722222],
[0.722222, 0.944444],
[0.944444, 0.722222],
[0.944444, 0.944444],
[0.462963, 0.500000],
[0.537037, 0.500000],
[0.500000, 0.462963],
[0.500000, 0.537037],
[0.129630, 0.500000],
[0.203704, 0.500000],
[0.166667, 0.462963],
[0.166667, 0.537037],
[0.796296, 0.500000],
[0.870370, 0.500000],
[0.833333, 0.462963],
[0.833333, 0.537037],
[0.462963, 0.166667],
[0.537037, 0.166667],
[0.500000, 0.129630],
[0.500000, 0.203704],
[0.462963, 0.833333],
[0.537037, 0.833333],
[0.500000, 0.796296],
[0.500000, 0.870370],
[0.129630, 0.166667],
[0.203704, 0.166667],
[0.166667, 0.129630],
[0.166667, 0.203704],
[0.129630, 0.833333],
[0.203704, 0.833333],
[0.166667, 0.796296],
[0.166667, 0.870370],
[0.796296, 0.166667],
[0.870370, 0.166667],
[0.833333, 0.129630],
[0.833333, 0.203704],
[0.796296, 0.833333],
[0.870370, 0.833333],
[0.833333, 0.796296],
[0.833333, 0.870370],
[0.351852, 0.500000],
[0.425926, 0.500000],
[0.388889, 0.462963],
[0.388889, 0.537037],
    ])
x, y = data.T
#plt.scatter(-5+x*10,-5+y*10,s=1,c='#ff0000')
plt.scatter(x,y,s=1,c='#ff0000')

#rx = 3*math.pi;
#ry = b*rx*rx - c*rx + r
#plt.scatter(rx,ry,s=5,c='#00ff00')
#rx = 5*math.pi;
#ry = b*rx*rx - c*rx + r
rx = 0;
ry = 0;
plt.scatter(rx,ry,s=5,c='#00ff00')

plt.show()
